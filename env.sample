# ==================== 应用核心配置 ====================
# Flask应用端口
FLASK_APP_PORT=5080

# 环境标识（development/testing/production）
# 生产环境必须设置为 production，影响 Cookie Secure 等安全配置
FLASK_ENV=development

# 基础URL（用于邮件链接等场景）
BASE_URL=https://lacus.cyberdoc.work

# 允许的域名和端口（CORS配置，逗号分隔）
ALLOWED_DOMAINS=lacus.cyberdoc.work,100.88.88.88
ALLOWED_PORTS=443,5080

# 访问码（用于特定功能的访问控制）
ACCESS_CODE=testcode

# ==================== 安全配置（必须修改！） ====================
# Flask 应用密钥（必须设置为强随机字符串！至少32字符）
# 生成方法：python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your_secret_key_here

# Flask-Security 密码盐值（用于密码哈希）
SECURITY_PASSWORD_SALT=your_password_salt_here

# Flask-Security Remember-Me 盐值
SECURITY_REMEMBER_SALT=your_remember_salt_here

# JWT 密钥（推荐单独设置，不设置则使用 SECRET_KEY）
JWT_SECRET_KEY=your_jwt_secret_key_here

# 遗留配置（向后兼容，优先使用上面的 SECRET_KEY）
FLASK_SECRET_KEY=just_need_a_key

# ==================== 会话配置 ====================
# Session 超时时间（秒，默认36000=10小时）
PERMANENT_SESSION_LIFETIME=36000

# Remember Me 功能（True/False，默认启用）
SECURITY_DEFAULT_REMEMBER_ME=True

# ==================== 数据库配置 ====================
# MongoDB 连接字符串
# 开发环境示例：mongodb://127.0.0.1:27017/lacus
# 生产环境示例：mongodb://username:password@host:port/database
MONGODB_URI=mongodb://127.0.0.1:27017/lacus

# 测试数据库（可选，用于集成测试）
# 未设置时自动在 MONGODB_URI 后添加 _test 后缀
# MONGODB_URI_TEST=mongodb://127.0.0.1:27017/lacus_test

# ==================== 日志配置 ====================
# 应用日志级别（DEBUG/INFO/WARNING/ERROR）
LOG_LEVEL=DEBUG

# PyMongo 日志级别（建议设为 INFO 避免过多日志）
PYMONGO_LOG_LEVEL=INFO

# ==================== 邮件配置 ====================
# SMTP 服务器配置
SES_SMTP_SERVER=smtp.gmail.com
SES_SMTP_PORT=587
SES_SMTP_USER=your_smtp_username
SES_SMTP_PASSWORD=your_smtp_password

# 发件人邮箱
SENDER_EMAIL=sender@example.com

# 邮件调试模式（true/false）
MAIL_DEBUG=false

# ==================== 测试配置（可选） ====================
# 测试环境管理员账号（用于集成测试）
# TEST_ADMIN_USERNAME=zala
# TEST_ADMIN_PASSWORD=plant4ever

# ==================== 生产环境注意事项 ====================
# 1. 必须设置强随机的 SECRET_KEY 和盐值
# 2. 必须设置 FLASK_ENV=production
# 3. 必须启用 HTTPS（在 Nginx/Apache 层面配置）
# 4. 必须为 MongoDB 启用认证（修改 MONGODB_URI）
# 5. 建议 JWT_SECRET_KEY 与 SECRET_KEY 使用不同的值
# 6. 建议将 Session 超时时间设置得更短（如1-2小时）
# 7. 建议使用 Redis 存储 Session（需额外配置）
